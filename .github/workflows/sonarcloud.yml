name: SonarCloud analysis

on:
  push:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  pull-requests: read # allows SonarCloud to decorate PRs with analysis results

jobs:
  Tox:
    strategy:
      matrix:
        python_version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
      - name: Set up Python test environment
        run: python -m pip install -r requirements-dev.txt
        env:
          PIP_EXTRA_INDEX_URL: ${{vars.PIP_EXTRA_INDEX_URL}}
      - uses: actions/github-script@v7
        id: tox-env
        with:

          script: |
            return "py${{matrix.python_version}}".replace('.','')
          result-encoding: string
      - name: Run Python tests
        env:
          PIP_EXTRA_INDEX_URL: ${{vars.PIP_EXTRA_INDEX_URL}}
        run: tox run -e ${{ steps.tox-env.outputs.result }},sonar_report
      - name: Temporarily save coverage data
        uses: actions/upload-artifact@v4
        with:
          name: python-coverage-${{ matrix.os }}-py${{matrix.python_version}}
          path: .tox/.tmp/.coverage.*
          retention-days: 1
          if-no-files-found: error

  Analysis:
    runs-on: ubuntu-latest
    needs: Tox
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt
          python-version: |
            3.8
            3.9
            3.10
            3.11
            3.12
      - name: Set up Python test environment
        run: python -m pip install -r requirements-dev.txt
        env:
          PIP_EXTRA_INDEX_URL: ${{vars.PIP_EXTRA_INDEX_URL}}
      - name: Retrieve coverage data
        uses: actions/download-artifact@v4
        with:
          pattern: python-coverage-*
          path: coverage-data/
          merge-multiple: true
      - name: Combine coverage data
        run: | 
          coverage combine  --data-file=.coverage coverage-data/
          coverage report --data-file=.coverage -i --omit *.spec
          coverage xml --omit *.spec --data-file=.coverage -o reports/coverage.xml
      - name: Save combined coverage data
        uses: actions/upload-artifact@v4
        with:
          name: combined-coverage-data
          path: reports/coverage.xml
          retention-days: 1
          if-no-files-found: error
      - name: Run MyPy
        run: |
          mypy package_speedwagon | tee reports/mypy.txt
      - name: Analyze with SonarCloud

        # You can pin the exact commit or the version.
        # uses: SonarSource/sonarcloud-github-action@v2.2.0
        uses: SonarSource/sonarcloud-github-action@4006f663ecaf1f8093e8e4abb9227f6041f52216
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # Generate a token on Sonarcloud.io, add it to the secrets of this repo with the name SONAR_TOKEN (Settings > Secrets > Actions > add new repository secret)
        with:
          # Additional arguments for the SonarScanner CLI
          args:
            # Unique keys of your project and organization. You can find them in SonarCloud > Information (bottom-left menu)
            # mandatory
            -Dsonar.projectKey=UIUCLibrary_speedwagon_scripts
            -Dsonar.organization=uiuclibrary
            -Dsonar.python.coverage.reportPaths=reports/coverage.xml
            -Dsonar.python.mypy.reportPaths=reports/mypy.txt
            -Dsonar.tests=tests
            -Dsonar.python.version=3
            -Dsonar.sources=package_speedwagon
          projectBaseDir: .